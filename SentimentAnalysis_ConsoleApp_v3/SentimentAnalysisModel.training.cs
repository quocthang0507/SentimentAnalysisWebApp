// This file was auto-generated by ML.NET Model Builder. 
using Microsoft.ML;
using System.Linq;

namespace SentimentAnalysis_ConsoleApp_v3
{
	public partial class SentimentAnalysisModel
	{
		public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
		{
			var pipeline = BuildPipeline(context);
			var model = pipeline.Fit(trainData);

			return model;
		}

		/// <summary>
		/// build the pipeline that is used from model builder. Use this function to retrain model.
		/// </summary>
		/// <param name="mlContext"></param>
		/// <returns></returns>
		public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
		{
			// Data process configuration with pipeline data transformations
			var pipeline = mlContext.Transforms.Text.FeaturizeText(@"col3", @"col3")
									.Append(mlContext.Transforms.Concatenate(@"Features", @"col3"))
									.Append(mlContext.Transforms.Conversion.MapValueToKey(@"col2", @"col2"))
									.Append(mlContext.Transforms.NormalizeMinMax(@"Features", @"Features"))
									.Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(l1Regularization: 1.11273891364966F, l2Regularization: 0.0813589681338465F, labelColumnName: @"col2", featureColumnName: @"Features"))
									.Append(mlContext.Transforms.Conversion.MapKeyToValue(@"PredictedLabel", @"PredictedLabel"));

			return pipeline;
		}
	}
}
